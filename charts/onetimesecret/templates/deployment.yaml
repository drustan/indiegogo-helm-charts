kind: Deployment
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.names.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy: {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ include "common.names.fullname" . }}
    spec:
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: ots-config
        configMap:
          name: {{ printf "%s-config" (include "common.names.fullname" .) }}
      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 6 }}
      {{- end }}
      containers:
      - name: onetimesecret
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        {{- with .Values.image }}
        image: "{{- if contains ":" .repository -}}{{ .repository }}{{- else -}}{{- if .registry -}}{{ .registry }}/{{- end -}}{{ .repository }}:{{ default $.Chart.AppVersion .tag }}{{- end -}}"
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: ONETIMESECRET_SECRET
          valueFrom:
            secretKeyRef:
              key: secret 
              name: {{ .Release.Name }}-secret
        ports:
        - containerPort: {{ default .Values.networkPort .Values.containerPort }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ default .Values.networkPort .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- else if .Values.customLivenessProbe }}
        livenessProbe: {{- toYaml .Values.customLivenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbeEnabled }}
        readinessProbe: {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: ots-config
          mountPath: /app/etc/config
          subPath: config
        {{- if .Values.extraVolumeMounts }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 8 }}
        {{- end }}
